@using DataProtection.PageModels
@using DataProtection.PageModels.lab2
@using DataProtection.Engine.Managers
@using System.Numerics

<h3>Шифр Шамира</h3>

<div class="row pb-4">
    <button class="btn btn-nav" @onclick="@Encrypt">Зашифровать</button>
    @if (ShamirDocument?.Data != null)
    {
        <label>Размер: @(ShamirDocument.Data.Length / 2048.00) мб</label>
    }
</div>
<div class="row pb-4">
    <button class="btn btn-nav" @onclick="@Decode">Дешифровать</button>
    @if (DecodShamirDocument?.Data != null)
    {
        <label>Размер: @(DecodShamirDocument.Data.Length / 2048.00) мб</label>
    }
</div>

<div>
    <button class="btn btn-nav" @onclick="@generate">Генерация</button>
</div>

<div>
    @*@if (Document != null && Document?.Data?.Length > 0)
        {
            <div>@Document.ContentType</div><br>
            <div>@Document.FileName</div><br>
            foreach (var doc in Document.Data) {
                    <div>@doc</div>
                }
        }*@
    <div>p = @Shamir.p</div>
    <div>Ca = @Shamir.Ca</div>
    <div>Da = @Shamir.Da</div>

    <div>Check[1] = @Shamir.Cb</div>

    @mCheckPrint
</div>

@code {
    [Parameter] public DocumentModel Document { get; set; }
    public DocumentModel ShamirDocument { get; set; }
    public DocumentModel DecodShamirDocument { get; set; }
    public ShamirModel Shamir { get; set; } = new ShamirModel();
    bool mCheckPrint = false;

    public void generate()
    {
        Random random = new Random();
        IsPrime prime = new IsPrime();
        long tmp;
        do
        {
            // tmp = random.Next(1 << 29, 1 << 30);
            tmp = random.Next(1 << 2, 1 << 4);
        } while (!prime.isPrime(tmp, 1 << 10));
        Shamir.p = (ulong)tmp;

        do
        {
            tmp = random.Next(1 << 2, 1 << 4);
        } while (!prime.isPrime(tmp, 1 << 10));
        Shamir.Ca = (ulong)tmp;

        Evklid evklid = new Evklid();
        evklid.gcd((long)(Shamir.p - 1), (long)Shamir.Ca);

        if (evklid.mY < 0)
        {
            evklid.mY += (long)(Shamir.p - 1);
        }
        Shamir.Da = (ulong)evklid.mY;
        Shamir.Ca = 7;
        Shamir.Da = 8;
        Shamir.p = 12;

        //do
        //{
        //    //tmp = random.Next(2, 1 << 29);
        //    tmp = random.Next(2, 1 << 2);
        //} while (!((tmp % 2 == 1) && (evklid.gcd((long)Shamir.p - 1, tmp) == 1) && tmp < (long)Shamir.p));
        //Shamir.Ca = (ulong)tmp;
        //Shamir.Da = (ulong)evklid.TablEvklid.Last().U.R;


        mCheckPrint = (Shamir.Ca * Shamir.Da) % (Shamir.p - 1) == 1;
    }

    public void Encrypt()
    {
        mCheckPrint = true;

        // что взять за исходное сообщение
        // Находим p
        // Находим m [сколько байт за основу берем]
        // Находим Са и Da
        // Находим Сb и Da



    }

    public void Decode()
    {

    }
}
